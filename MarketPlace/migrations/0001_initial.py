# Generated by Django 4.2.2 on 2023-11-28 15:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import helpers.fields
import helpers.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MarketPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='market name')),
                ('cover_image', helpers.fields.ValidatedImageField(upload_to='marketplace/cover_images', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))])),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='product name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='product description')),
                ('cover_image', helpers.fields.ValidatedImageField(blank=True, null=True, upload_to='products/cover_images', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))])),
                ('quantity', models.IntegerField(default=0, verbose_name='available quantity')),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='discount percentage')),
                ('price', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='product selling price')),
                ('currency_symbol', models.CharField(default='â‚¦', max_length=1, verbose_name='product currency symbol')),
                ('currency_abbrev', models.CharField(default='NGN', max_length=3, verbose_name='abbreviated product currency')),
                ('currency_verbose', models.CharField(default='Naira', max_length=20, verbose_name='verbose product currency')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='store name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='store description')),
                ('logo', helpers.fields.ValidatedImageField(blank=True, null=True, upload_to='store/logos', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))])),
                ('cover_image', helpers.fields.ValidatedImageField(blank=True, null=True, upload_to='store/cover_images', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))])),
                ('country', models.CharField(max_length=255, verbose_name='country of location')),
                ('city', models.CharField(max_length=255, verbose_name='store city')),
                ('province', models.CharField(max_length=255, verbose_name='store province')),
                ('additional_information', models.JSONField(blank=True, null=True, verbose_name='store additional information')),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='MarketPlace.marketplace')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stores', to=settings.AUTH_USER_MODEL, verbose_name='store vendor')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reaction', models.CharField(choices=[('like', 'like'), ('dislike', 'dislike')], max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='MarketPlace.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='MarketPlace.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', helpers.fields.ValidatedImageField(upload_to='products/product_images', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))], verbose_name='image file')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='MarketPlace.product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='store name')),
                ('image', helpers.fields.ValidatedImageField(blank=True, null=True, upload_to='products/category_images', validators=[helpers.validators.ImageSizeValidator(5242880), django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg', 'jfif'))])),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='MarketPlace.marketplace')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='MarketPlace.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='merchant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_products', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='MarketPlace.store'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=1, verbose_name='number of products')),
                ('status', models.CharField(choices=[('shipped', 'En route'), ('cancelled', 'Cancelled'), ('delivered', 'Delivered')], max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='MarketPlace.product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(default=1, verbose_name='number of products')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='MarketPlace.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cartitems', to='MarketPlace.product')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
